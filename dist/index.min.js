var Single=function(r){"use strict";r=r&&r.hasOwnProperty("default")?r.default:r;const e=(r,e)=>typeof r===e,n=r=>e(r,"function"),o=r=>e(r,"number"),t=r=>e(r,"object"),s=r=>t(r)&&n(r[Symbol.iterator]),c=r=>t(r)&&n(r.onSubscribe),i=r=>null!=r&&(r instanceof Promise||(t(r)||n(r))&&n(r.then));function u(r){const{onSuccess:e,onError:n,controller:o}=this;if(!o.signal.aborted)try{void 0===r?n("onSuccess called with a null value."):e(r)}finally{o.abort()}}function b(r){const{onError:e,controller:n}=this;let o=r;if(r instanceof Error||(o=new Error("onError called with a non-Error value.")),!n.signal.aborted)try{e(o)}finally{n.abort()}}const a=r=>r,l=r=>{throw r},h=r=>({onSubscribe:r.onSubscribe,onSuccess:n(r.onSuccess)?r.onSuccess:a,onError:n(r.onError)?r.onError:l}),S=(e,n)=>{const{onSubscribe:o,onSuccess:t}=h(e),s=new r;o(s),s.signal.aborted||(t(n),s.abort())},d=(e,n)=>{const{onSubscribe:o,onError:t}=h(e),s=new r;o(s),s.signal.aborted||(t(n),s.abort())};function f(r){let e;try{if(null==(e=this.supplier()))throw new Error("Single.error: Error supplier returned a null value.")}catch(r){e=r}d(r,e)}var E=r=>{let e=r;r instanceof Error||n(r)||(e=new Error("Single.error received a non-Error value.")),n(r)||(e=(r=>()=>r)(e));const o=new Br(f);return o.supplier=e,o};function v(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e),s=new r,{signal:c}=s;if(t(s),c.aborted)return;const{sources:i}=this;for(const r of i){if(c.aborted)return;if(!(r instanceof Br)){o(new Error("Single.amb: One of the sources is a non-Single.")),s.abort();break}r.subscribeWith({onSubscribe(r){c.addEventListener("abort",()=>r.abort())},onSuccess(r){n(r),s.abort()},onError(r){o(r),s.abort()}})}}var w=r=>{if(!s(r))return E(new Error("Single.amb: sources is not Iterable."));const e=new Br(v);return e.sources=r,e};function m(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e),s=new r,{signal:c}=s;if(t(s),c.aborted)return;const i=r=>{c.aborted||(n(r),s.abort())},u=r=>{c.aborted||(o(r),s.abort())},{source:b,other:a}=this;b.subscribeWith({onSubscribe(r){c.addEventListener("abort",()=>r.abort())},onSuccess:i,onError:u}),a.subscribeWith({onSubscribe(r){c.aborted?r.abort():c.addEventListener("abort",()=>r.abort())},onSuccess:i,onError:u})}var g=(r,e)=>{if(!(e instanceof Br))return r;const n=new Br(m);return n.source=r,n.other=e,n};function p(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e),{source:s,cached:c,observers:i,subscribed:u}=this;if(c){const e=new r;t(e);const{value:s,error:c}=this;null!=s&&n(s),null!=c&&o(c),e.abort()}else{const n=i.length;i[n]=e;const o=new r;o.signal.addEventListener("abort",()=>{i.splice(n,1)}),t(o),u||(s.subscribeWith({onSubscribe(){},onSuccess:r=>{this.cached=!0,this.value=r;for(const e of i)e.onSuccess(r);this.observers=void 0},onError:r=>{this.cached=!0,this.error=r;for(const e of i)e.onError(r);this.observers=void 0}}),this.subscribed=!0)}}var W=r=>{const e=new Br(p);return e.source=r,e.cached=!1,e.subscribed=!1,e.observers=[],e};function y(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e),s=new r;s.onSuccess=u.bind(this),s.onError=b.bind(this),this.controller=s,this.onSuccess=n,this.onError=o,t(s);try{this.subscriber(s)}catch(r){s.onError(r)}}var L=r=>{if("function"!=typeof r)return E(new Error("Single.create: There are no subscribers."));const e=new Br(y);return e.subscriber=r,e},z=(r,e)=>{if(!n(e))return r;let o;try{if(!((o=e(r))instanceof Br))throw new Error("Single.compose: transformer returned a non-Single.")}catch(r){o=E(r)}return o};const T=(r,e)=>r===e;function O(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r),{value:t,comparer:s}=this;this.source.subscribeWith({onSubscribe:o,onSuccess(r){let o;try{o=s(r,t)}catch(r){return void n(r)}e(o)},onError:n})}var P=(r,e,o)=>{if(null==e)return r;let t=o;n(t)||(t=T);const s=new Br(O);return s.source=r,s.value=e,s.comparer=t,s};function A(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r);let t,s;try{if(!((t=this.supplier())instanceof Br))throw new Error("Single.defer: supplier returned a non-Single.")}catch(r){s=r}null!=s?d(r,s):t.subscribeWith({onSubscribe:o,onSuccess:e,onError:n})}var R=r=>{const e=new Br(A);return e.supplier=r,e};function k(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e),{amount:s,doDelayError:c}=this;let i;const u=new r,{signal:b}=u;t(u),b.aborted||(b.addEventListener("abort",()=>{void 0!==i&&clearTimeout(i)}),this.source.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>{r.abort()})},onSuccess(r){i=setTimeout(()=>{n(r),u.abort()},s)},onError(r){i=setTimeout(()=>{o(r),u.abort()},c?s:0)}}))}var x=(r,e,n)=>{if(!o(e))return r;const t=new Br(k);return t.source=r,t.amount=e,t.doDelayError=n,t};function I(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e),{amount:s}=this;let c;const i=new r,{signal:u}=i;u.addEventListener("abort",()=>{void 0!==c&&clearTimeout(c)}),t(i),u.aborted||(c=setTimeout(()=>{this.source.subscribeWith({onSubscribe(r){u.addEventListener("abort",()=>r.abort())},onSuccess(r){n(r),i.abort()},onError(r){o(r),i.abort()}})},s))}var U=(r,e)=>{if(!o(e))return r;const n=new Br(I);return n.source=r,n.amount=e,n};function j(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e),{source:s,other:c}=this,i=new r,{signal:u}=i;t(i),u.aborted||c.subscribeWith({onSubscribe(r){u.addEventListener("abort",()=>r.abort())},onSuccess(){u.aborted||s.subscribeWith({onSubscribe(r){u.addEventListener("abort",()=>r.abort())},onSuccess(r){n(r),i.abort()},onError(r){o(r),i.abort()}})},onError(r){o(r),i.abort()}})}var C=(r,e)=>{if(!(e instanceof Br))return r;const n=new Br(j);return n.source=r,n.other=e,n};function D(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r),{source:t,callable:s}=this;t.subscribeWith({onSubscribe:o,onSuccess(r){e(r),s(r)},onError:n})}var M=(r,e)=>{if(!n(e))return r;const o=new Br(D);return o.source=r,o.callable=e,o};function N(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r),{source:t,callable:s}=this;t.subscribeWith({onSubscribe:o,onSuccess(r){e(r),s()},onError(r){n(r),s()}})}var F=(r,e)=>{if(!n(e))return r;const o=new Br(N);return o.source=r,o.callable=e,o};function q(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r),{source:t,callable:s}=this;let c=!1;t.subscribeWith({onSubscribe(r){r.signal.addEventListener("abort",()=>{c||(s(),c=!0)}),o(r)},onSuccess(r){e(r),c||(s(),c=!0)},onError(r){n(r),c||(s(),c=!0)}})}var B=(r,e)=>{if(!n(e))return r;const o=new Br(q);return o.source=r,o.callable=e,o};function G(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r),{source:t,callable:s}=this;t.subscribeWith({onSubscribe(r){r.signal.addEventListener("abort",s),o(r)},onSuccess:e,onError:n})}var H=(r,e)=>{if(!n(e))return r;const o=new Br(G);return o.source=r,o.callable=e,o};function J(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r),{source:t,callable:s}=this;t.subscribeWith({onSubscribe:o,onSuccess:e,onError(r){s(r),n(r)}})}var K=(r,e)=>{if(!n(e))return r;const o=new Br(J);return o.source=r,o.callable=e,o};function Q(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r),{source:t,callable:s}=this;t.subscribeWith({onSubscribe:o,onSuccess(r){s(r),e(r)},onError(r){s(void 0,r),n(r)}})}var V=(r,e)=>{if(!n(e))return r;const o=new Br(Q);return o.source=r,o.callable=e,o};function X(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r),{source:t,callable:s}=this;t.subscribeWith({onSubscribe:o,onSuccess(r){s(r),e(r)},onError:n})}var Y=(r,e)=>{if(!n(e))return r;const o=new Br(X);return o.source=r,o.callable=e,o};function Z(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r),{source:t,callable:s}=this;t.subscribeWith({onSubscribe(r){s(r),o(r)},onSuccess:e,onError:n})}var $=(r,e)=>{if(!n(e))return r;const o=new Br(Z);return o.source=r,o.callable=e,o};function _(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r),{source:t,callable:s}=this;t.subscribeWith({onSubscribe:o,onSuccess(r){s(),e(r)},onError(r){s(),n(r)}})}var rr=(r,e)=>{if(!n(e))return r;const o=new Br(_);return o.source=r,o.callable=e,o};function er(e){const{onSubscribe:n,onError:o,onSuccess:t}=h(e),s=new r,{signal:c}=s;if(n(s),c.aborted)return;const{mapper:i,source:u}=this;u.subscribeWith({onSubscribe(r){c.addEventListener("abort",()=>r.abort())},onSuccess(r){let e;try{if(!((e=i(r))instanceof Br))throw new Error("Single.flatMap: mapper returned a non-Single")}catch(r){return void o(r)}e.subscribeWith({onSubscribe(r){c.addEventListener("abort",()=>r.abort())},onSuccess(r){t(r),s.abort()},onError(r){o(r),s.abort()}})},onError(r){o(r),s.abort()}})}var nr=(r,e)=>{if(!n(e))return r;const o=new Br(er);return o.source=r,o.mapper=e,o};function or(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e),s=new r;if(t(s),s.signal.aborted)return;this.controller=s,this.onSuccess=n,this.onError=o;const c=u.bind(this),a=b.bind(this);let l;try{l=this.callable()}catch(r){return void a(r)}i(l)?cr(l).subscribeWith({onSubscribe(r){s.signal.addEventListener("abort",()=>r.abort())},onSuccess:c,onError:a}):c(l)}var tr=r=>{if(!n(r))return E(new Error("Single.fromCallable: callable received is not a function."));const e=new Br(or);return e.callable=r,e};function sr(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e),s=new r;t(s),s.signal.aborted||(this.controller=s,this.onSuccess=n,this.onError=o,this.promise.then(u.bind(this),b.bind(this)))}var cr=r=>{if(!i(r))return E(new Error("Single.fromPromise: expects a Promise-like value."));const e=new Br(sr);return e.promise=r,e};function ir(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e),s=new r;if(t(s),s.signal.aborted)return;this.controller=s,this.onSuccess=n,this.onError=o;const c=u.bind(this),i=b.bind(this);this.subscriber(c,i)}var ur=r=>{if(!n(r))return E(new Error("Single.fromResolvable: expects a function."));const e=new Br(ir);return e.subscriber=r,e};function br(r){S(r,this.value)}var ar=r=>{if(null==r)return E(new Error("Single.just: received a null value."));const e=new Br(br);return e.value=r,e};function lr(r){let e;try{if(e=this.operator(r),!c(e))throw new Error("Single.lift: operator returned a non-Observer.")}catch(e){return void d(r,e)}this.source.subscribeWith(e)}var hr=(r,e)=>{if(!n(e))return r;const o=new Br(lr);return o.source=r,o.operator=e,o};const Sr=r=>r;function dr(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r),{mapper:t}=this;this.source.subscribeWith({onSubscribe:o,onSuccess(r){let o;try{if(null==(o=t(r)))throw new Error("Single.map: mapper function returned a null value.")}catch(r){return void n(r)}e(o)},onError:n})}var fr=(r,e)=>{let o=e;n(e)||(o=Sr);const t=new Br(dr);return t.source=r,t.mapper=o,t};function Er(e){const{onSubscribe:n,onError:o,onSuccess:t}=h(e),s=new r,{signal:c}=s;n(s),c.aborted||this.source.subscribeWith({onSubscribe(r){c.addEventListener("abort",()=>r.abort())},onSuccess(r){let e=r;r instanceof Br||(e=E(new Error("Single.merge: source emitted a non-Single value."))),e.subscribeWith({onSubscribe(r){c.addEventListener("abort",()=>r.abort())},onSuccess(r){t(r),s.abort()},onError(r){o(r),s.abort()}})},onError(r){o(r),s.abort()}})}var vr=r=>{if(!(r instanceof Br))return E(new Error("Single.merge: source is not a Single."));const e=new Br(Er);return e.source=r,e};function wr(e){const{onSuccess:o,onError:t,onSubscribe:s}=h(e),{source:c,resumeIfError:i}=this,u=new r,{signal:b}=u;s(u),b.aborted||c.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onSuccess(r){o(r),u.abort()},onError(r){let e;if(n(i))try{if(!((e=i(r))instanceof Br))throw new Error("Single.onErrorResumeNext: returned an non-Single.")}catch(e){return void t(new Error([r,e]))}else e=i;e.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onSuccess(r){o(r),u.abort()},onError(r){t(r),u.abort()}})}})}var mr=(r,e)=>{if(!(n(e)||e instanceof Br))return r;const o=new Br(wr);return o.source=r,o.resumeIfError=e,o};function gr(r){const{onSuccess:e,onError:n,onSubscribe:o}=h(r),{source:t,item:s}=this;t.subscribeWith({onSubscribe:o,onSuccess:e,onError(r){let o;try{if(null==(o=s(r)))throw new Error(new Error("Single.onErrorReturn: returned a null value."))}catch(e){return void n([r,e])}e(o)}})}var pr=(r,e)=>{if(!n(e))return r;const o=new Br(gr);return o.source=r,o.item=e,o};function Wr(r){const{onSuccess:e,onSubscribe:n}=h(r),{source:o,item:t}=this;o.subscribeWith({onSubscribe:n,onSuccess:e,onError(){e(t)}})}var yr=(r,e)=>{if(null==e)return r;const n=new Br(Wr);return n.source=r,n.item=e,n};const Lr={signal:{aborted:!1,addEventListener:()=>{},removeEventListener:()=>{},onabort:()=>{}},abort:()=>{}};function zr(r){r.onSubscribe(Lr)}let Tr;var Or=()=>(void 0===Tr&&((Tr=new Br(zr)).subscribeActual=zr.bind(Tr)),Tr);function Pr(e){const{onSubscribe:o,onSuccess:t,onError:s}=h(e),c=new r,{signal:i}=c;if(o(c),i.aborted)return;const{source:u,bipredicate:b}=this;let a=0;const l=()=>{i.aborted||(a+=1,u.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onSuccess(r){t(r),c.abort()},onError(r){if(n(b)){b(a,r)?l():(s(r),c.abort())}else l()}}))};l()}var Ar=(r,e)=>{const n=new Br(Pr);return n.source=r,n.bipredicate=e,n};function Rr(e){const{onSubscribe:n,onSuccess:o,onError:t}=h(e),s=new r,{signal:c}=s;if(n(s),c.aborted)return;const{source:i,other:u}=this;u.subscribeWith({onSubscribe(r){c.addEventListener("abort",()=>r.abort())},onSuccess(){t(new Error("Single.takeUntil: Source cancelled by other Single.")),s.abort()},onError(r){t(new Error(["Single.takeUntil: Source cancelled by other Single.",r])),s.abort()}}),i.subscribeWith({onSubscribe(r){c.aborted?r.abort():c.addEventListener("abort",()=>r.abort())},onSuccess(r){o(r),s.abort()},onError(r){t(r),s.abort()}})}const kr=(r,e)=>{if(!(e instanceof Br))return r;const n=new Br(Rr);return n.source=r,n.other=e,n};function xr(e){const{onSuccess:n,onSubscribe:o}=h(e),t=new r,{signal:s}=t;if(o(t),s.aborted)return;const c=setTimeout(n,this.amount,0);s.addEventListener("abort",()=>{clearTimeout(c)})}var Ir=r=>{if(!o(r))return E(new Error('Single.timer: "amount" is not a number.'));const e=new Br(xr);return e.amount=r,e};function Ur(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e),{amount:s}=this,c=new r,{signal:i}=c;if(t(c),i.aborted)return;const u=setTimeout(()=>{o(new Error("Single.timeout: TimeoutException (no success signals within the specified timeout).")),c.abort()},s);i.addEventListener("abort",()=>{clearTimeout(u)}),this.source.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onSuccess(r){n(r),c.abort()},onError(r){o(r),c.abort()}})}var jr=(r,e)=>{if(!o(e))return r;const n=new Br(Ur);return n.source=r,n.amount=e,n};const Cr=r=>r;function Dr(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e),s=[],c=new r,{signal:i}=c;if(t(c),i.aborted)return;const{sources:u,zipper:b}=this,a=u.length;if(0===a)return o(new Error("Single.zip: empty iterable")),void c.abort();let l=a;for(let r=0;r<a;r+=1){if(i.aborted)return;const e=u[r];if(e instanceof Br)e.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onSuccess(e){if(!i.aborted&&(s[r]=e,0===(l-=1))){let r;try{if(null==(r=b(s)))throw new Error("Single.zip: zipper function returned a null value.")}catch(r){return o(r),void c.abort()}n(r),c.abort()}},onError(r){o(r),c.abort()}});else{if(null==e){o(new Error("Single.zip: One of the sources is undefined.")),c.abort();break}s[r]=e,l-=1}}}var Mr=(r,e)=>{if(!s(r))return E(new Error("Single.zip: sources is not Iterable."));let o=e;n(e)||(o=Cr);const t=new Br(Dr);return t.sources=r,t.zipper=o,t};const Nr=(r,e)=>[r,e];function Fr(e){const{onSuccess:n,onError:o,onSubscribe:t}=h(e);let s,c;const i=new r,{signal:u}=i;if(t(i),u.aborted)return;const{source:b,other:a,zipper:l}=this;b.subscribeWith({onSubscribe(r){u.addEventListener("abort",()=>r.abort())},onSuccess(r){if(!u.aborted&&(s=r,null!=c)){let r;try{if(null==(r=l(s,c)))throw new Error("Single.zipWith: zipper function returned a null value.")}catch(r){return o(r),void i.abort()}n(r),i.abort()}},onError(r){o(r),i.abort()}}),a.subscribeWith({onSubscribe(r){u.aborted?r.abort():u.addEventListener("abort",()=>r.abort())},onSuccess(r){if(!u.aborted&&(c=r,null!=s)){let r;try{if(null==(r=l(s,c)))throw new Error("Single.zipWith: zipper function returned a null value.")}catch(r){return o(r),void i.abort()}n(r),i.abort()}},onError(r){o(r),i.abort()}})}var qr=(r,e,o)=>{if(!(e instanceof Br))return r;let t=o;n(o)||(t=Nr);const s=new Br(Fr);return s.source=r,s.other=e,s.zipper=t,s};class Br{constructor(r){this.subscribeActual=r}static create(r){return L(r)}static amb(r){return w(r)}ambWith(r){return g(this,r)}cache(){return W(this)}compose(r){return z(this,r)}contains(r,e){return P(this,r,e)}static defer(r){return R(r)}delay(r,e){return x(this,r,e)}delaySubscription(r){return U(this,r)}delayUntil(r){return C(this,r)}doAfterSuccess(r){return M(this,r)}doAfterTerminate(r){return F(this,r)}doFinally(r){return B(this,r)}doOnAbort(r){return H(this,r)}doOnError(r){return K(this,r)}doOnEvent(r){return V(this,r)}doOnSubscribe(r){return $(this,r)}doOnSuccess(r){return Y(this,r)}doOnTerminate(r){return rr(this,r)}static error(r){return E(r)}flatMap(r){return nr(this,r)}static fromCallable(r){return tr(r)}static fromPromise(r){return cr(r)}static fromResolvable(r){return ur(r)}static just(r){return ar(r)}lift(r){return hr(this,r)}map(r){return fr(this,r)}static merge(r){return vr(r)}static never(){return Or()}onErrorResumeNext(r){return mr(this,r)}onErrorReturn(r){return pr(this,r)}onErrorReturnItem(r){return yr(this,r)}retry(r){return Ar(this,r)}subscribeWith(r){c(r)&&this.subscribeActual.call(this,r)}subscribe(e,n){const o=new r;let t=!1;return this.subscribeWith({onSubscribe(r){r.signal.addEventListener("abort",()=>{t||(t=!0,o.signal.aborted||o.abort())}),o.signal.addEventListener("abort",()=>{t||(t=!0,r.signal.aborted||r.abort())})},onSuccess:e,onError:n}),o}takeUntil(r){return kr(this,r)}static timer(r){return Ir(r)}timeout(r){return jr(this,r)}static zip(r,e){return Mr(r,e)}zipWith(r,e){return qr(this,r,e)}toPromise(){return new Promise((r,e)=>{this.subscribe(r,e)})}then(r,e){return this.toPromise().then(r,e)}catch(r){return this.toPromise().catch(r)}}return Br}(AbortController);